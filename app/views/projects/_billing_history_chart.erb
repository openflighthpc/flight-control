<% project = @project.decorate %>
<% year_options = project.billing_history_years %>
<% latest_year = year_options.max %>

<h2 class="ml-2 mb-4 text-center">Billing History</h2>

<div class="chart-container">
  <%= select_tag :years, options_for_select(year_options, latest_year), { onchange: 'changeYear()', class: "form-control" } %>
  <canvas id="billingHistoryChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-annotation/dist/chartjs-plugin-annotation.min.js"></script>
<script>
  let year = <%= raw(latest_year) %>;
  const allData = <%= raw(project.billing_chart_data.to_json) %>;
  const allTooltips = <%= raw(project.billing_chart_tooltips.to_json) %>;
  const gridColour = '#CFEDFA';
  const borderColour = '#AEC7D7';
  const alcesBlue = '#2693D7';

  const ctx = document.getElementById('billingHistoryChart');
  let chart = new Chart(ctx, {
    type: 'line',
    data: {
      datasets: [{
        data: allData[year],
        borderWidth: 2,
        tooltips: allTooltips[year],
      }]
    },
    options: {
      clip: false,
      scales: {
        y: {
          beginAtZero: true,
          title: {
            display: true,
            text: 'Total (cu)',
            font: {
              size: 20,
            },
            padding: {
              bottom: 20
            }
          },
          ticks: {
            font: {
              size: 16,
            },
            maxTicksLimit: 8
          },
          grid: {
            color: gridColour
          },
          border: {
            color: borderColour
          }
        },
        x: {
          title: {
            display: true,
            text: 'Billing date',
            font: {
              size: 20,
            },
            padding: {
              top: 20
            }
          },
          ticks: {
            font: {
              size: 16,
            }
          },
          grid: {
            color: gridColour
          },
          border: {
            color: borderColour
          },
          type: 'time',
          time: {
            unit: 'month',
            displayFormats: {
              'week': 'DD.MM',
              'month': 'do MMM',
              'year': 'MMMM',
            },
          },
          min: minDate(year),
          max: maxDate(year),
        }
      },
      elements: {
        point: {
          pointBorderColor: pointColours(year),
          pointBorderWidth: 4,
          pointBackgroundColor: '#ffffff',
          pointRadius: 5,
          pointHitRadius: 5
        }
      },
      plugins: {
        clip: false,
        annotation: {
          annotations: {
            current: {
              type: 'line',
              xMin: currentCycle(),
              xMax: currentCycle(),
              borderColor: 'transparent',
              borderWidth: 1,
              label: {
                display: true,
                content: ['(forecast)'],
                position: 'start',
                backgroundColor: 'transparent',
                color: '#5FD094',
                font: {
                  size: 16
                },
                yAdjust: 63,
              }
            }
          }
        },
        legend: {
          display: false
        },
        tooltip: {
          displayColors: false,
          bodyAlign: 'center',
          yAlign: 'bottom',
          bodyFont: {
            size: 16
          },
          callbacks: {
            title: function () {
              return ""
            },
            label: function (context) {
              return context.dataset.tooltips[context.dataIndex];
            }
          }
        }
      }
    }
  });

  function changeYear() {
    let year = Number(document.getElementById("years").value);
    chart.data.datasets.forEach(function(dataset) {
      dataset.data = allData[year];
      dataset.tooltips = allTooltips[year];
    });
    chart.options.scales.x.min = minDate(year);
    chart.options.scales.x.max = maxDate(year);
    chart.options.elements.point.pointBorderColor = pointColours(year);
    chart.update('none');
  }

  function minDate(year) {
    return `${year - 1}-12-20`;
  }

  function maxDate(year) {
    return `${year}-12-31`;
  }

  function currentCycle() {
    const now = new Date();
    const yearData = allData[now.getFullYear()];
    if (yearData !== undefined) {
      const latestCycleBillingDate = yearData[yearData.length - 1]['x'];
      if (new Date(latestCycleBillingDate).getTime() > now.getTime()) {
        return latestCycleBillingDate;
      }
    }
    return 0;
  }

  function pointColours(year) {
    const chartData = allData[year];
    const numPoints = chartData.length;
    let colours = [];
    if (new Date(chartData[numPoints - 1]['x']).getTime() > new Date().getTime()) {
      for (let i = 0; i < numPoints-1; i++) {
        colours.push(alcesBlue);
      }
      colours.push('#5FD094')
    } else {
      colours = alcesBlue;
    }
    return colours;
  }
</script>
